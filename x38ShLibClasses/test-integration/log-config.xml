<?xml version="1.0" encoding="UTF-8"?>
<!-- <beans xmlns="http://www.springframework.org/schema/beans" -->
<!--     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" -->
<!--     xmlns:aop="http://www.springframework.org/schema/aop" -->
<!--     xsi:schemaLocation=" -->
<!--             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd -->
<!--             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"> -->

<!-- 	<bean id="udaFilter" class="com.ejie.x38.UdaFilter" /> -->
	
<!-- 	<bean id="webContextParameterManager" class="com.ejie.x38.util.WebContextParameterManager" /> -->
	
<!-- 	<bean id="webLoggingManager" class="com.ejie.x38.log.LoggingManagerImpl" /> -->
	
<!-- 	<bean id="filterLoggingAdvice" class="com.ejie.x38.log.FilterLoggingAdviceImpl"> -->
<!-- 		<property name="loggingManager" ref="webLoggingManager"/> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="webMainAdvice" class="com.ejie.x38.aop.MainAdvice"> -->
<!-- 		<property name="filterLoggingAdvice" ref="filterLoggingAdvice" /> -->
<!-- 	</bean> -->


<!-- </beans> -->


<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<bean id="udaFilter" class="com.ejie.x38.UdaFilter" />
	
	<bean id="webContextParameterManager" class="com.ejie.x38.util.WebContextParameterManager" />
	
	<bean id="webLoggingManager" class="com.ejie.x38.log.LoggingManagerImpl" />
	
	<bean id="filterLoggingAdvice" class="com.ejie.x38.log.FilterLoggingAdviceImpl">
		<property name="loggingManager" ref="webLoggingManager"/>
	</bean>
	
	<bean id="webMainAdvice" class="com.ejie.x38.aop.MainAdvice">
		<property name="filterLoggingAdvice" ref="filterLoggingAdvice" />
	</bean>



	<!-- Se especifica la inicializacion de los log's mediante logback -->
	<bean id="logSystemInitializer"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="com.ejie.x38.log.LogbackConfigurer.initLogging" />
		<property name="arguments">
			<list>
				<!-- Se especifica la ubicación del fichero de configuración de logback 
					(puede ser una ruta del classpath o absoluta) -->
				<value>logback.xml</value>
				<!-- Se especifica si se desea que se pinte el estado de la configuración 
					de logback por la salida de log correspondiente -->
				<value>true</value>
			</list>
		</property>
	</bean>


	<bean id="loggingManager" class="com.ejie.x38.log.LoggingManagerImpl" />

	<bean id="serviceLoggingAdvice" class="com.ejie.x38.log.ServiceLoggingAdviceImpl">
		<property name="loggingManager" ref="loggingManager" />
	</bean>

	<bean id="daoLoggingAdvice" class="com.ejie.x38.log.DaoLoggingAdviceImpl">
		<property name="loggingManager" ref="loggingManager" />
	</bean>

	<bean id="incidenceLoggingAdvice" class="com.ejie.x38.log.IncidenceLoggingAdviceImpl">
		<property name="loggingManager" ref="loggingManager" />
	</bean>

	<bean id="mainAdvice" class="com.ejie.x38.aop.MainAdvice">
		<property name="serviceLoggingAdvice" ref="serviceLoggingAdvice" />
		<property name="daoLoggingAdvice" ref="daoLoggingAdvice" />
		<property name="incidenceLoggingAdvice" ref="incidenceLoggingAdvice" />
	</bean>

	<aop:config>
		<aop:pointcut id="serviceCall"
			expression="execution(*
			com.ejie.*.service..*.*(..))" />
		<aop:aspect id="serviceLogAspect" ref="mainAdvice">
			<aop:around pointcut-ref="serviceCall" method="serviceLogCall" />
		</aop:aspect>
	</aop:config>

	<aop:config>
		<aop:pointcut id="daoCall"
			expression="execution(*
			com.ejie.*.dao..*.*(..))" />
		<aop:aspect id="daoLogAspect" ref="mainAdvice">
			<aop:around pointcut-ref="daoCall" method="daoLogCall" />
		</aop:aspect>
	</aop:config>

	<aop:config>
		<aop:pointcut id="incidenceCreation"
			expression="execution(* com.ejie.*.service..*.*(..)) &amp;&amp;target(target)" />
		<aop:aspect id="incidenceLogAspect" ref="mainAdvice">
			<aop:after-throwing throwing="exception"
				pointcut-ref="incidenceCreation" method="logIncidence" />
		</aop:aspect>
	</aop:config>
</beans>
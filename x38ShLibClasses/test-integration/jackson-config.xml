<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


	<!-- Serializador utilizado por UDA para serializar unicamente las -->
	<bean id="customSerializer"
		class="com.ejie.x38.serialization.CustomSerializer" />

	<bean id="udaMappingJackson2HttpMessageConverter"
		class="com.ejie.x38.serialization.UdaMappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes"
			ref="jacksonSupportedMediaTypes" />
		<property name="udaModule" ref="udaModule" />
	</bean>

	<!-- Modulo de UDA para Jackson -->
	<bean id="udaModule" class="com.ejie.x38.serialization.UdaModule">
		<property name="serializers">
			<util:map>
				<entry key="#{T(com.ejie.x38.log.model.LogModel)}"
					value-ref="customSerializer" />
			</util:map>
		</property>
		<property name="serializationInclusions"
			ref="serializationInclusions" />
		<property name="serializationFeature"
			ref="serializationFeature" />
		<property name="deserializationFeature"
			ref="deserializationFeature" />
	</bean>

	<!-- MediaTypes soportados por jackson -->
	<util:list id="jacksonSupportedMediaTypes">
		<bean class="org.springframework.http.MediaType">
			<constructor-arg value="text" />
			<constructor-arg value="plain" />
			<constructor-arg
				value="#{T(org.springframework.http.converter.json.MappingJackson2HttpMessageConverter).DEFAULT_CHARSET}" />
		</bean>
		<bean class="org.springframework.http.MediaType">
			<constructor-arg value="application" />
			<constructor-arg value="json" />
			<constructor-arg
				value="#{T(org.springframework.http.converter.json.MappingJackson2HttpMessageConverter).DEFAULT_CHARSET}" />
		</bean>
	</util:list>

	<!-- Features de configuracion de la serializacion -->
	<util:map id="serializationFeature">
		<entry
			key="#{T(com.fasterxml.jackson.databind.SerializationFeature).ORDER_MAP_ENTRIES_BY_KEYS}"
			value="true" />
	</util:map>

	<!-- Features de configuracion de la deserializacion -->
	<util:map id="deserializationFeature">
		<entry
			key="#{T(com.fasterxml.jackson.databind.DeserializationFeature).FAIL_ON_UNKNOWN_PROPERTIES}"
			value="false" />
	</util:map>

	<!-- Inclusiones de serializacion -->
	<util:list id="serializationInclusions">
		<!-- <value type="com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion">NON_NULL</value> -->
	</util:list>

</beans>
